{"version":3,"sources":["services/people.js","components/Notification.js","components/People.js","App.js","index.js"],"names":["URL","peopleService","getAll","axios","get","getOne","id","create","newPerson","post","update","put","deleteOne","delete","Notification","message","console","log","className","type","text","AddPeople","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","Filter","People","people","handleDelete","map","person","name","Person","number","event","DeleteButton","onClick","App","useState","setPeople","setNewName","setNewNumber","filterText","setFilterText","setMessage","useEffect","then","response","data","notificator","setTimeout","visiblePeople","filter","toLowerCase","includes","target","preventDefault","window","confirm","personToUpdate","find","updatePerson","JSON","stringify","concat","catch","err","createPerson","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e2af11f.chunk.js","sourcesContent":["import axios from \"axios\"\n\n// const URL = \"http://localhost:3001/people\"\nconst URL = \"/api/people\" // when running in Heroku\n\nconst getAll = () => {\n  return axios.get(URL)\n}\n\nconst getOne = (id) => {\n  return axios.get(`${URL}/${id}`)\n}\n\nconst create = (newPerson) => {\n  return axios.post(URL, newPerson)\n}\n\nconst update = (id, newPerson) => {\n  return axios.put(`${URL}/${id}`, newPerson)\n}\n\nconst deleteOne = (id) => {\n  return axios.delete(`${URL}/${id}`)\n}\n\nconst peopleService = {\n  getAll,\n  getOne,\n  create,\n  update,\n  deleteOne,\n}\n\nexport default peopleService\n","import React from \"react\"\n\nexport const Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  console.log(\"notification message\", message)\n  return <div className={message.type}>{message.text}</div>\n}\n","import React from \"react\"\n\n\nexport const AddPeople = (props) => {\n    return (\n      <>\n        <h3>Add people</h3>\n        <form onSubmit={props.addPerson}>\n          <div>\n            name: <input value={props.newName} onChange={props.handleNameChange}/>\n            <br/>\n            number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n      </>\n    )\n  }\n  \n  \n  export const Filter = ({value, onChange}) => {\n    return (\n      <>\n        filter shown with  <input value={value} onChange={onChange}/>\n      </>\n    )\n  }\n  \n  export const People = ({people, handleDelete}) => {\n    return (\n      <>\n      <h3>People and their numbers</h3>\n      <ul>\n        {people.map(person => <Person key={person.name} person={person} handleDelete={handleDelete}/>)}\n      </ul>\n      </>\n    )\n  }\n  \n  const Person = ({person, handleDelete}) => {\n    return (\n      <li>{person.name} {person.number} <DeleteButton handleDelete={(event) => handleDelete(event, person)} /></li>\n    )\n  }\n  \n  const DeleteButton = ({handleDelete, value}) => {\n    return (\n      <>\n        <button onClick={handleDelete}>delete</button>\n      </>\n    )\n  }\n\n","import React, { useState, useEffect } from \"react\"\nimport peopleService from \"./services/people\"\nimport { Notification } from \"./components/Notification\"\nimport { AddPeople, Filter, People } from \"./components/People\"\n\nconst App = () => {\n  const [people, setPeople] = useState([])\n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [filterText, setFilterText] = useState(\"\")\n  const [message, setMessage] = useState({})\n\n  useEffect(() => {\n    peopleService.getAll().then((response) => setPeople(response.data))\n  }, [])\n\n  function addPerson(event) {\n    event.preventDefault()\n    let personExists = people.map((person) => person.name).includes(newName)\n    if (personExists) {\n      let shouldUpdate = window.confirm(\n        `${newName} already in DB, do you want to update the phone number?`\n      )\n      if (shouldUpdate) {\n        updatePerson()\n      }\n    } else {\n      createPerson()\n    }\n    setNewName(\"\")\n    setNewNumber(\"\")\n  }\n\n  function updatePerson() {\n    setPeople(\n      people.map((person) =>\n        person.name === newName ? { ...person, number: newNumber } : person\n      )\n    )\n    // Why is the personToUpdate still the old one???\n    // It was just updated in the above line!\n    // OK, setPeople is asynchronous and the result is not set immediately,\n    // so the people variable still holds the old people list\n    console.log(\"All people\", people)\n    let personToUpdate = people.find((person) => person.name === newName)\n    console.log(\"Person to update\", personToUpdate)\n    peopleService\n      .update(personToUpdate.id, {\n        ...personToUpdate,\n        number: newNumber,\n      })\n      .then((response) => console.log(response.data))\n      .then(() =>\n        notificator(`Successfully updated ${personToUpdate.name}`, \"success\")\n      )\n  }\n\n  function createPerson() {\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    }\n    peopleService\n      .create(newPerson)\n      .then((response) => {\n        console.log(`Adding person ${JSON.stringify(response.data)}`)\n        setPeople(people.concat(response.data))\n      })\n      .then(() =>\n        notificator(`Successfully added ${newPerson.name}`, \"success\")\n      )\n      .catch((err) => {\n        console.log(err)\n        notificator(err.response.data, \"error\")\n      })\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterUpdate = (event) => {\n    console.log(event.target.value)\n    setFilterText(event.target.value.toLowerCase())\n  }\n\n  const handleDelete = (event, personToDelete) => {\n    // Is it useful/necessary to pass the event object here?\n    console.log(`Deleting now: ${JSON.stringify(personToDelete)}`)\n    if (window.confirm(`Delete ${personToDelete.name}?`)) {\n      peopleService\n        .deleteOne(personToDelete.id)\n        .then(\n          setPeople(people.filter((person) => person.id !== personToDelete.id))\n        )\n        .then(() =>\n          notificator(`Successfully deleted ${personToDelete.name}`, \"success\")\n        )\n        .catch((err) => {\n          console.log(err)\n          notificator(\n            `Failed to delete ${personToDelete.name}, it was probably deleted from the server`,\n            \"error\"\n          )\n        })\n    }\n  }\n\n  // Set the message back to null after 5s\n  const notificator = (message, type) => {\n    let msg = { text: message, type: type }\n    setMessage(msg)\n    setTimeout(() => setMessage(null), 5000)\n  }\n\n  const visiblePeople = filterText\n    ? people.filter((person) => person.name.toLowerCase().includes(filterText))\n    : people\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} />\n      <Filter value={filterText} onChange={handleFilterUpdate} />\n      <AddPeople\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <People people={visiblePeople} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}